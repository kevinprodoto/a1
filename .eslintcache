[{"/home/vit/Desktop/a1/src/index.js":"1","/home/vit/Desktop/a1/src/Containers/AppContainer/index.js":"2","/home/vit/Desktop/a1/src/Containers/AppContainer/AppContainer.js":"3","/home/vit/Desktop/a1/src/Components/App/index.js":"4","/home/vit/Desktop/a1/src/Components/App/App.js":"5","/home/vit/Desktop/a1/src/Components/AppHeader/index.js":"6","/home/vit/Desktop/a1/src/Components/ItemsList/index.js":"7","/home/vit/Desktop/a1/src/Components/AppHeader/AppHeader.js":"8","/home/vit/Desktop/a1/src/Components/ItemsList/ItemsList.js":"9","/home/vit/Desktop/a1/src/Components/Item/index.js":"10","/home/vit/Desktop/a1/src/1.js":"11","/home/vit/Desktop/a1/src/Components/Item/Item.js":"12","/home/vit/Desktop/a1/src/Tools/changeDate.js":"13","/home/vit/Desktop/a1/src/Tools/comission.js":"14","/home/vit/Desktop/a1/src/Tools/profit.js":"15","/home/vit/Desktop/a1/src/Tools/pureProfit.js":"16","/home/vit/Desktop/a1/src/Tools/profitByDay.js":"17","/home/vit/Desktop/a1/src/Tools/howMuchDays.js":"18","/home/vit/Desktop/a1/src/Tools/firstDay.js":"19","/home/vit/Desktop/a1/src/Tools/lastDay.js":"20","/home/vit/Desktop/a1/src/Components/TaskForm/index.js":"21","/home/vit/Desktop/a1/src/Components/TaskForm/TaskForm.js":"22","/home/vit/Desktop/a1/src/Services/Request.js":"23"},{"size":369,"mtime":1608064491788,"results":"24","hashOfConfig":"25"},{"size":72,"mtime":1608033703309,"results":"26","hashOfConfig":"25"},{"size":8849,"mtime":1608057033493,"results":"27","hashOfConfig":"25"},{"size":45,"mtime":1608033703309,"results":"28","hashOfConfig":"25"},{"size":981,"mtime":1608050878170,"results":"29","hashOfConfig":"25"},{"size":63,"mtime":1608033703309,"results":"30","hashOfConfig":"25"},{"size":63,"mtime":1608033703309,"results":"31","hashOfConfig":"25"},{"size":1958,"mtime":1608053676734,"results":"32","hashOfConfig":"25"},{"size":2769,"mtime":1608052308511,"results":"33","hashOfConfig":"25"},{"size":48,"mtime":1608033703309,"results":"34","hashOfConfig":"25"},{"size":1030936,"mtime":1608033703309,"results":"35","hashOfConfig":"25"},{"size":648,"mtime":1608044874361,"results":"36","hashOfConfig":"25"},{"size":162,"mtime":1608050113817,"results":"37","hashOfConfig":"25"},{"size":258,"mtime":1608054314900,"results":"38","hashOfConfig":"25"},{"size":609,"mtime":1608054372192,"results":"39","hashOfConfig":"25"},{"size":606,"mtime":1608054382392,"results":"40","hashOfConfig":"25"},{"size":72,"mtime":1608049374499,"results":"41","hashOfConfig":"25"},{"size":104,"mtime":1608052200462,"results":"42","hashOfConfig":"25"},{"size":217,"mtime":1608051490503,"results":"43","hashOfConfig":"25"},{"size":228,"mtime":1608051797719,"results":"44","hashOfConfig":"25"},{"size":60,"mtime":1608055920562,"results":"45","hashOfConfig":"25"},{"size":488,"mtime":1608064615483,"results":"46","hashOfConfig":"25"},{"size":283,"mtime":1608061664782,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"112x95a",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vit/Desktop/a1/src/index.js",[],"/home/vit/Desktop/a1/src/Containers/AppContainer/index.js",[],["97","98"],"/home/vit/Desktop/a1/src/Containers/AppContainer/AppContainer.js",["99","100","101","102","103","104","105","106"],"import React, {Component} from \"react\"\n\nimport App from \"../../Components/App\";\n\nimport TaskForm from \"../../Components/TaskForm/index\";\n\nimport {changeDate} from \"../../Tools/changeDate\";\n\nimport {firstDay} from \"../../Tools/firstDay\";\n\nimport {lastDay} from \"../../Tools/lastDay\";\n\nimport Request from \"../../Services/Request\";\n\nexport default class AppContainer extends Component {\n\n    state = {\n        label: \"\",\n        items: new Request(localStorage.getItem(\"req\")).getAllTrades(),\n        updetedItems: new Request(localStorage.getItem(\"req\")).getAllTrades(),\n        all: true,\n        sell: false,\n        buy: false,\n        brokCom: false,\n        dateFrom: firstDay(new Request(localStorage.getItem(\"req\")).getAllTrades()),\n        dateTo: lastDay(new Request(localStorage.getItem(\"req\")).getAllTrades()),\n    }\n\n    changeAll = () => {\n        if (this.state.label !== \"\") {\n            this.setState(() => {\n                return {                    \n                    all: true,\n                    sell: false,\n                    buy: false,\n                    brokCom: false,\n                    updetedItems: this.state.items.filter(item => {\n                        if (item.ticker) {\n                            return item.ticker.includes(this.state.label)\n                        }\n                    }).filter(item => changeDate(this.state.dateFrom, this.state.dateTo, new Date(item.date)))\n                }\n            })\n        } else {\n            this.setState(() => {\n                return {\n                    updetedItems: this.state.items.map(item => item).filter(item => changeDate(this.state.dateFrom, this.state.dateTo, new Date(item.date))),\n                    all: true,\n                    sell: false,\n                    buy: false,\n                    brokCom: false,\n                }\n            })\n        }\n    }\n\n    changeSell = () => {\n        if (this.state.label !== \"\") {\n            this.setState(() => {\n                return {\n                    all: false,\n                    sell: true,\n                    buy: false,\n                    brokCom: false,\n                    updetedItems: this.state.items.filter(item => item.operationType === \"Sell\").filter(item => {\n                        if (item.ticker) {\n                            return item.ticker.includes(this.state.label)\n                        }\n                    }).filter(item => changeDate(this.state.dateFrom, this.state.dateTo, new Date(item.date)))\n                }\n                })\n        } else {\n            this.setState(() => {\n                return {\n                    updetedItems: this.state.items.filter((item) => item.operationType === \"Sell\").filter(item => changeDate(this.state.dateFrom, this.state.dateTo, new Date(item.date))),\n                    all: false,\n                    sell: true,\n                    buy: false,\n                    brokCom: false,\n                }\n            })\n        }\n\n    }\n\n    changeBuy = () => { \n        if (this.state.label !== \"\") {\n            this.setState(() => {\n                return {\n                    all: false,\n                    sell: false,\n                    buy: true,\n                    brokCom: false,\n                    updetedItems: this.state.items.filter(item => item.operationType === \"Buy\").filter(item => {\n                        if (item.ticker) {\n                            return item.ticker.includes(this.state.label)\n                        }\n                    }).filter(item => changeDate(this.state.dateFrom, this.state.dateTo, new Date(item.date)))\n                }\n                })\n        } else {\n            this.setState(() => {\n                return {\n                    updetedItems: this.state.items.filter((item) => item.operationType === \"Buy\").filter(item => changeDate(this.state.dateFrom, this.state.dateTo, new Date(item.date))),\n                    all: false,\n                    sell: false,\n                    buy: true,\n                    brokCom: false,\n                }\n            })\n        }\n\n    }\n\n    changeComission = () => {\n        if (this.state.label !== \"\") {\n            this.setState(() => {\n                return {\n                    all: false,\n                    sell: false,\n                    buy: false,\n                    brokCom: true,\n                    updetedItems: this.state.items.filter(item => item.operationType === \"BrokCom\").filter(item => {\n                        if (item.ticker) {\n                            return item.ticker.includes(this.state.label)\n                        }\n                    }).filter(item => changeDate(this.state.dateFrom, this.state.dateTo, new Date(item.date)))\n                }\n                })\n        } else {\n            this.setState(() => {\n                return {\n                    updetedItems: this.state.items.filter((item) => item.operationType === \"BrokCom\").filter(item => changeDate(this.state.dateFrom, this.state.dateTo, new Date(item.date))),\n                    all: false,\n                    sell: false,\n                    buy: false,\n                    brokCom: true,\n                }\n            })\n        }\n    }\n\n    onLabelChange = (evv) => {\n        if (evv.target.value === \"\") {\n            this.setState(() => {\n                return {\n                    updetedItems: this.state.items.filter(item => changeDate(this.state.dateFrom, this.state.dateTo, new Date(item.date))),\n                    label: \"\",\n                }\n            })\n        } else if (this.state.all) {\n            this.setState(() => {\n                return {\n                    label: evv.target.value,\n                    updetedItems: this.state.items.filter(item => {\n                        if (item.ticker) {\n                            return item.ticker.includes(evv.target.value)\n                        }\n                    }).filter(item => changeDate(this.state.dateFrom, this.state.dateTo, new Date(item.date)))\n                }\n            })\n        } else if (this.state.sell) {\n            this.setState(() => {\n                return {\n                    label: evv.target.value,\n                    updetedItems: this.state.items.filter(item => {\n                        if (item.ticker) {\n                            return item.ticker.includes(evv.target.value)\n                        }\n                    }).filter(item => item.operationType === \"Sell\").filter(item => changeDate(this.state.dateFrom, this.state.dateTo, new Date(item.date)))\n                }\n            })\n        } else if (this.state.buy) {\n            this.setState(() => {\n                return {\n                    label: evv.target.value,\n                    updetedItems: this.state.items.filter(item => {\n                        if (item.ticker) {\n                            return item.ticker.includes(evv.target.value)\n                        }\n                    }).filter(item => item.operationType === \"Buy\").filter(item => changeDate(this.state.dateFrom, this.state.dateTo, new Date(item.date)))\n                }\n            })\n        } else if (this.state.brokCom) {\n            this.setState(() => {\n                return {\n                    label: evv.target.value,\n                    updetedItems: this.state.items.filter(item => {\n                        if (item.ticker) {\n                            return item.ticker.includes(evv.target.value)\n                        }\n                    }).filter(item => item.operationType === \"BrokCom\").filter(item => changeDate(this.state.dateFrom, this.state.dateTo, new Date(item.date)))\n                }\n            })\n        }\n    }\n\n    changeFrom = (evv) => {\n        this.setState(() => {\n            return {\n                dateFrom: new Date(evv.target.value)\n            }\n        })\n        this.changeAll()\n    }\n\n    changeTo = (evv) => {\n        this.setState(() => {\n            return {\n                dateTo: new Date(evv.target.value)\n            }\n        })\n        this.changeAll()\n    }\n\n    render() {\n        const {updetedItems, all, sell, buy, brokCom, dateTo, dateFrom} = this.state;\n        if (!localStorage.getItem(\"req\")) {\n            console.log(\"HELLO FAGGOT!\")\n            return <TaskForm />\n        } else {\n            return <App \n            onLabelChange = {this.onLabelChange}\n            items = {updetedItems}\n            changeComission = {this.changeComission}\n            changeBuy = {this.changeBuy}\n            changeSell = {this.changeSell}\n            changeAll = {this.changeAll}\n            all = {all}\n            sell = {sell}\n            buy = {buy}\n            brokCom = {brokCom}\n            changeFrom = {this.changeFrom}\n            changeTo = {this.changeTo}\n            dateFrom = {dateFrom}\n            dateTo = {dateTo}/>\n        }\n\n    }\n}","/home/vit/Desktop/a1/src/Components/App/index.js",[],"/home/vit/Desktop/a1/src/Components/App/App.js",[],"/home/vit/Desktop/a1/src/Components/AppHeader/index.js",[],"/home/vit/Desktop/a1/src/Components/ItemsList/index.js",[],"/home/vit/Desktop/a1/src/Components/AppHeader/AppHeader.js",[],"/home/vit/Desktop/a1/src/Components/ItemsList/ItemsList.js",[],"/home/vit/Desktop/a1/src/Components/Item/index.js",[],"/home/vit/Desktop/a1/src/1.js",[],["107","108"],"/home/vit/Desktop/a1/src/Components/Item/Item.js",[],"/home/vit/Desktop/a1/src/Tools/changeDate.js",[],"/home/vit/Desktop/a1/src/Tools/comission.js",[],"/home/vit/Desktop/a1/src/Tools/profit.js",[],"/home/vit/Desktop/a1/src/Tools/pureProfit.js",[],"/home/vit/Desktop/a1/src/Tools/profitByDay.js",[],"/home/vit/Desktop/a1/src/Tools/howMuchDays.js",[],"/home/vit/Desktop/a1/src/Tools/firstDay.js",[],"/home/vit/Desktop/a1/src/Tools/lastDay.js",[],"/home/vit/Desktop/a1/src/Components/TaskForm/index.js",[],"/home/vit/Desktop/a1/src/Components/TaskForm/TaskForm.js",[],"/home/vit/Desktop/a1/src/Services/Request.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":37,"column":64,"nodeType":"115","messageId":"116","endLine":37,"endColumn":66},{"ruleId":"113","severity":1,"message":"114","line":65,"column":110,"nodeType":"115","messageId":"116","endLine":65,"endColumn":112},{"ruleId":"113","severity":1,"message":"114","line":94,"column":109,"nodeType":"115","messageId":"116","endLine":94,"endColumn":111},{"ruleId":"113","severity":1,"message":"114","line":123,"column":113,"nodeType":"115","messageId":"116","endLine":123,"endColumn":115},{"ruleId":"113","severity":1,"message":"114","line":155,"column":64,"nodeType":"115","messageId":"116","endLine":155,"endColumn":66},{"ruleId":"113","severity":1,"message":"114","line":166,"column":64,"nodeType":"115","messageId":"116","endLine":166,"endColumn":66},{"ruleId":"113","severity":1,"message":"114","line":177,"column":64,"nodeType":"115","messageId":"116","endLine":177,"endColumn":66},{"ruleId":"113","severity":1,"message":"114","line":188,"column":64,"nodeType":"115","messageId":"116","endLine":188,"endColumn":66},{"ruleId":"109","replacedBy":"117"},{"ruleId":"111","replacedBy":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["119"],["120"],"no-global-assign","no-unsafe-negation"]